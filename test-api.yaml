kind: ServiceAccount
apiVersion: v1
metadata:
  name: apiserver
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: apiserver
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: apiserver
  namespace: test
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.test.kubevirt.io
spec:
  insecureSkipTLSVerify: true
  group: test.kubevirt.io
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: test-api
    namespace: test
  version: v1alpha1
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: test
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    apiserver: "true"
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: test-server
  namespace: test
  labels:
    apiserver: "true"
spec:
  replicas: 1
  selector:
    apiserver: "true"
  template:
    metadata:
      labels:
        apiserver: "true"
    spec:
      serviceAccountName: apiserver
      containers:
      - name: test-server
        image: kubevirt/virt-apiserver:devel
        imagePullPolicy: Never
        command: [ "/virt-apiserver", "--bind-address=0.0.0.0", "--secure-port=8189",  "--etcd-servers=http://localhost:2379", "--v=100"]
        ports:
          - containerPort: 8189
            name: "virt-apiserver"
            protocol: "TCP"
